apiVersion: apps/v1
kind: Deployment
metadata:
  name: transmission
  labels:
    {{- include "helm-mediaserver.labels" . | nindent 4 }}
    app.kubernetes.io/component: transmission
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "helm-mediaserver.labels" . | nindent 6 }}
      app.kubernetes.io/component: transmission
  template:
    metadata:
      labels:
        {{- include "helm-mediaserver.labels" . | nindent 8 }}
        app.kubernetes.io/component: transmission
    spec:
      containers:
        - name: transmission
          image: {{ printf "%s:%s" (ternary "haugene/transmission-openvpn" "linuxserver/transmission" .Values.transmission.vpn.enabled) (default "latest" .Values.transmission.tag) }}
          imagePullPolicy: {{ include "helm-mediaserver.imagePullPolicy" .Values.transmission }}
          ports:
            - name: http
              containerPort: 9091
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          env:
            - name: TZ
              value: Europe/Vienna
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            {{- if .Values.transmission.vpn.enabled }}
            - name: TRANSMISSION_WEB_UI
              value: {{ default "combustion" .Values.transmission.webui }}
            - name: OPENVPN_PROVIDER
              value: {{ required "openvpn provider is required to use VPN" .Values.transmission.vpn.credentials.provider }}
            - name: OPENVPN_CONFIG
              value: {{ required "openvpn config is required to use VPN" .Values.transmission.vpn.credentials.config }}
            - name: OPENVPN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: transmission-vpncredentials
                  key: username
            - name: OPENVPN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: transmission-vpncredentials
                  key: password
            # - name: LOCAL_NETWORK
            #   value: 192.168.0.0/16
            - name: OPENVPN_OPTS
              value: --inactive 3600 --ping 10 --ping-exit 60
            {{ end }}
          volumeMounts:
            {{- if .Values.transmission.vpn.enabled }}
            - name: config
              subPath: transmission
              mountPath: /data/transmission-home
            - name: data
              subPath: torrents/completed
              mountPath: /data/completed
            - name: data
              subPath: torrents/incomplete
              mountPath: /data/incomplete
            {{- else }}
            - name: config
              subPath: transmission
              mountPath: /config
            - name: data
              subPath: torrents/completed
              mountPath: /downloads/complete
            - name: data
              subPath: torrents/incomplete
              mountPath: /downloads/incomplete
            - name: data
              subPath: torrents/watch
              mountPath: /watch
            {{ end }}
          {{- if .Values.transmission.vpn.enabled }}
          securityContext:
            capabilities:
              add: 
                - "NET_ADMIN"
          {{ end }}
      # {{- if and .Values.transmission.vpn.enabled (eq .Values.transmission.vpn.credentials.provider "mullvad") }}
      # securityContext:
      #   sysctls:
      #     - name: net.ipv6.conf.all.disable_ipv6
      #       value: "0"
      # {{ end }}
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: config-pv-claim
        - name: data
          persistentVolumeClaim:
            claimName: data-pv-claim